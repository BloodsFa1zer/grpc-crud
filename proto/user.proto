syntax = "proto3";
option go_package = ".";

import "github.com/mwitkow/go-proto-validators/validator.proto";
package proto;


service UserService {
  rpc Create(CreateUserRequest) returns (UserProfileResponse);
  rpc Read(SingleUserRequest) returns (UserProfileResponse);
  rpc Update(UpdateUserRequest) returns (UserProfileResponse);
  rpc Delete(SingleUserRequest) returns (SuccessResponse);
}

message CreateUserRequest{
  string Nickname = 2 [(validator.field) = {string_not_empty:true, msg_exists:true, length_gt : 3, regex: "^[a-zA-Z0-9]*$"}];
  string FirstName = 3 [(validator.field) = {string_not_empty:true, msg_exists: true, length_gt : 3, regex: "^[a-zA-Z]*$"}];
  string LastName = 4 [(validator.field) = {string_not_empty:true, msg_exists: true, length_gt : 3, regex: "^[a-zA-Z]*$"}];
  string Password = 5 [(validator.field) = {string_not_empty:true, msg_exists: true, length_gt : 3}];
}

message UpdateUserRequest{
  int64 ID = 1 [(validator.field)  = {msg_exists: true}];
  string Nickname = 2 [(validator.field) = {string_not_empty:true, length_gt : 3, regex: "^[a-zA-Z0-9]*$"}];
  string FirstName = 3 [(validator.field) = {string_not_empty:true, length_gt : 3, regex: "^[a-zA-Z]*$"}];
  string LastName = 4 [(validator.field) = {string_not_empty:true, length_gt : 3}];
  string Password = 5 [(validator.field) = {string_not_empty:true, length_gt : 3}];
}

message SingleUserRequest{
  int64 ID = 1 [(validator.field) = {msg_exists: true, human_error: "ID must be a number"}];
}

message UserProfileResponse{
  int64 ID = 1;
  string Nickname = 2;
  string FirstName = 3;
  string LastName = 4;
  string Password = 5;
  string CreatedAt = 6;
  string UpdatedAt = 7;
  string DeletedAt = 8;
}

message SuccessResponse{
  string response = 1;
}
